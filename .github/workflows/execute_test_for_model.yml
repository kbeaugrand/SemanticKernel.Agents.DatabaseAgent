name: .NET Test on LLM model

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      completion:
        required: true
        type: string
      embedding:
        required: true
        type: string
      continue-on-error:
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test ${{ inputs.tag }}
    continue-on-error: ${{ inputs.continue-on-error || 'false' }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 8.x
      - run: dotnet restore
        working-directory: ./src/
      - run: dotnet build --no-restore
        working-directory: ./src/
      - run: dotnet test --no-build --verbosity normal
        working-directory: ./src/
        env:
          LOGGING__LOGLEVEL__DEFAULT: DEBUG

          DATABASE__CONNECTIONSTRING: ${{ secrets.DATABASE__CONNECTIONSTRING }}
                    
          KERNEL__COMPLETION: ${{ inputs.completion }}
          KERNEL__EMBEDDING: ${{ inputs.embedding }}
          MEMORY__KIND: volatile
          MEMORY__TOPK: 15
          MEMORY__MAXTOKENS: 2000
          MEMORY__TEMPERATURE: 0.1
          MEMORY__TOPP: 0.1
          MEMORY__MINSCORE: 0.5

          ## Azure OpenAI Service
          SERVICES__GPT4OMINI__TYPE: AzureOpenAI
          SERVICES__GPT4OMINI__ENDPOINT: ${{ secrets.AZUREOPENAI_ENDPOINT }}
          SERVICES__GPT4OMINI__APIKEY: ${{ secrets.AZUREOPENAI_APIKEY }}
          SERVICES__GPT4OMINI__DEPLOYMENT: gpt-4o-mini
          SERVICES__GPT41MINI__TYPE: AzureOpenAI
          SERVICES__GPT41MINI__ENDPOINT: ${{ secrets.AZUREOPENAI_ENDPOINT }}
          SERVICES__GPT41MINI__APIKEY: ${{ secrets.AZUREOPENAI_APIKEY }}
          SERVICES__GPT41MINI__DEPLOYMENT: gpt-4.1-mini
          SERVICES__TEXTEMBEDDINGADA002__TYPE: AzureOpenAI
          SERVICES__TEXTEMBEDDINGADA002__ENDPOINT: ${{ secrets.AZUREOPENAI_ENDPOINT }}
          SERVICES__TEXTEMBEDDINGADA002__APIKEY: ${{ secrets.AZUREOPENAI_APIKEY }}
          SERVICES__TEXTEMBEDDINGADA002__DEPLOYMENT: text-embedding-ada-002

          ## Qwen Models via Ollama
          SERVICES__QWEN25CODER__TYPE: Ollama
          SERVICES__QWEN25CODER__ENDPOINT: ${{ secrets.OLLAMA_ENDPOINT }}
          SERVICES__QWEN25CODER__MODELID: qwen2.5-coder:7b
          SERVICES__QWEN38B__TYPE: Ollama
          SERVICES__QWEN38B__ENDPOINT: ${{ secrets.OLLAMA_ENDPOINT }}
          SERVICES__QWEN38B__MODELID: qwen3:8b
          SERVICES__QWEN330B__TYPE: Ollama
          SERVICES__QWEN330B__ENDPOINT: ${{ secrets.OLLAMA_ENDPOINT }}
          SERVICES__QWEN330B__MODELID: qwen3:30b-a3b

          ## Mistral Models via Ollama
          SERVICES__DEVSTRAL__TYPE: Ollama
          SERVICES__DEVSTRAL__ENDPOINT: ${{ secrets.OLLAMA_ENDPOINT }}
          SERVICES__DEVSTRAL__MODELID: devstral:24b

          SERVICES__MAGISTRAL__TYPE: Ollama
          SERVICES__MAGISTRAL__ENDPOINT: ${{ secrets.OLLAMA_ENDPOINT }}
          SERVICES__MAGISTRAL__MODELID: magistral:24b

          ## Phi Models via Ollama
          SERVICES__PHI4__TYPE: Ollama
          SERVICES__PHI4__ENDPOINT: ${{ secrets.OLLAMA_ENDPOINT }}
          SERVICES__PHI4__MODELID: phi4:14b

          ## Llama Models via Ollama
          SERVICES__LLAMA4__TYPE: Ollama
          SERVICES__LLAMA4__ENDPOINT: ${{ secrets.OLLAMA_ENDPOINT }}
          SERVICES__LLAMA4__MODELID: llama4:scout

          SERVICES__LLAMA33__TYPE: Ollama
          SERVICES__LLAMA33__ENDPOINT: ${{ secrets.OLLAMA_ENDPOINT }}
          SERVICES__LLAMA33__MODELID: llama3.3:70b

          ## Nomic Embedding Models via Ollama
          SERVICES__NOMICEMBEDTEXT__TYPE: Ollama
          SERVICES__NOMICEMBEDTEXT__ENDPOINT: ${{ secrets.OLLAMA_ENDPOINT }}
          SERVICES__NOMICEMBEDTEXT__MODELID: nomic-embed-text:v1.5

